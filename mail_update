#!/bin/bash

SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ] ; do SOURCE="$(readlink "$SOURCE")"; done
DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"        # http://stackoverflow.com/questions/59895/can-a-bash-script-tell-what-directory-its-stored-in

source "${DIR}"/bash_import_set_defaults                # set -o nounset; set -o errtrace; set -o errexit; set -o pipefail
source "${DIR}"/bash_import_lock_unique_cmd_line        #implements locking so that two identical commands can not be run at the same time.
source "${DIR}"/bash_import_email_archive_folder        # defines email_archive_folder

scriptname=`basename "$0"`
argcount=1
usage="email@domain.com"

test "$#" -eq "${argcount}" || { echo "$0 ${usage}" && exit 1 ; } #"-ge=>=" "-gt=>" "-le=<=" "-lt=<" "-ne=!="

email_address="${1}"

grep "${email_address}" "${DIR}"/.noupdate && { echo "${email_address} must be removed from ${DIR}/.noupdate before mail_update will attempt to update the mailbox, exiting 0." && exit 0 ; }

source "${DIR}"/bash_import_get_archive_folder #must be done after email_address is set
#defines get_archive_folder()

archive_folder=$(get_archive_folder)

folder_type=$(basename "${archive_folder}" | cut -d '_' -f 2)

echo "folder_type=${folder_type}"

if [[ "${folder_type}" == "getmail" ]];
then
	"${DIR}"/getmail_gmail "${email_address}" || exit 1


elif [[ "${folder_type}" == "gpgMaildir" ]];
then
	"${DIR}"/gpgmda_rsync "${email_address}" || ( echo "gpgmda_rsync exited nonzero" && exit 1 )

	"${DIR}"/gpgmda_to_maildir "${email_address}" || ( echo "gpgmda_to_maildir exited nonzero" && exit 1 )
else
        echo "unknown folder type \"${folder_type}\", exiting" && exit 1
fi


"${DIR}"/update_notmuch "${email_address}" || exit 1


exit 0
