#!/bin/bash

# import comment for this script:
# 	set -o nounset; set -o errtrace; set -o errexit; set -o pipefail

				# from 'man set'

set -o nounset          #-u     # Treat unset variables and parameters other than the special parameters
                                # "@" and "*" as an error when performing parameter expansion.
                                # If expansion is attempted on an unset variable or parameter, the shell
                                # prints an error message, and, if not interactive, exits with a non-zero status.

set -o errtrace         #-E     # If set, any trap on ERR is inherited by shell functions, command substitutions,
                                # and commands executed in a subshell environment.  The ERR trap is normally not inherited in such cases.

set -o errexit          #-e     # Exit immediately if a pipeline (which may consist of a single simple command),
				# a subshell command enclosed in parentheses, or one of the commands executed as
				# part of a command list enclosed by braces (see SHELL GRAMMAR above) exits with
				# a non-zero status.
				# The shell does not exit if the command that fails is:
				# (1) part of the command list immediately following a while or until keyword
				# (2) part of the test following the if or elif reserved words
				# (3) part of any command executed in a && or || list
				#	except:
				#		(a) the command following the final && or ||
				#		(b) any command in a pipeline but the last
				#		(c) or if the command's return value is being inverted with !.
				#
				# A trap on ERR, if set, is executed before the shell exits.
				# This option applies to the shell environment and each subshell environment separately
				# (see COMMAND EXECUTION ENVIRONMENT above), and may cause subshells to exit before executing all the
				# commands in the subshell.

				# SEE http://mywiki.wooledge.org/BashFAQ/105


set -o pipefail                 # If set, the return value of a pipeline is the value of the last (rightmost) command
                                # to exit with a non-zero status, or zero if all commands in the pipeline exit successfully.

